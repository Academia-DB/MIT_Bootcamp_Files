{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\derek\\\\Desktop\\\\Code\\\\MIT\\\\MIT_Bootcamp_Files\\\\Week_13\\\\formik_app_assingment\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; // TODO: import useFormik from formik library\n\nimport { useFormik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // TODO: add a const called formik assigned to useFormik()\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    onSubmit: values => {\n      console.log('form:', values);\n      alert(\"Login Suc\");\n    },\n    validate: values => {\n      let errors = {};\n      if (!values.email) errors.email = 'Field required';else {\n        if (values.email.indexOf('@') == -1) errors.email = 'Username should be an email';\n      }\n      if (!values.password) errors.password = 'Field required';\n      return errors;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"space\",\n    align: \"center\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"emailField\",\n        name: \"email\",\n        type: \"text\",\n        onChange: formik.handleChange,\n        value: formik.values.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"emailError\",\n        style: {\n          color: 'red'\n        },\n        children: formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 32\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"pswField\",\n        name: \"password\",\n        type: \"text\",\n        onChange: formik.handleChange,\n        value: formik.values.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), formik.errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"pswError\",\n        style: {\n          color: 'red'\n        },\n        children: formik.errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 35\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"submitBtn\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/derek/Desktop/Code/MIT/MIT_Bootcamp_Files/Week_13/formik_app_assingment/src/App.js"],"names":["React","useFormik","App","formik","initialValues","email","password","onSubmit","values","console","log","alert","validate","errors","indexOf","handleSubmit","handleChange","color"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAAQC,SAAR,QAAwB,QAAxB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAMC,MAAM,GAAGF,SAAS,CAAC;AACvBG,IAAAA,aAAa,EAAE;AACbC,MAAAA,KAAK,EAAE,EADM;AAEbC,MAAAA,QAAQ,EAAE;AAFG,KADQ;AAKvBC,IAAAA,QAAQ,EAAEC,MAAM,IAAI;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,MAArB;AACAG,MAAAA,KAAK,CAAC,WAAD,CAAL;AACD,KARsB;AASvBC,IAAAA,QAAQ,EAAEJ,MAAM,IAAI;AAClB,UAAIK,MAAM,GAAG,EAAb;AACA,UAAG,CAACL,MAAM,CAACH,KAAX,EAAkBQ,MAAM,CAACR,KAAP,GAAe,gBAAf,CAAlB,KACK;AACH,YAAGG,MAAM,CAACH,KAAP,CAAaS,OAAb,CAAqB,GAArB,KAA6B,CAAC,CAAjC,EAAoCD,MAAM,CAACR,KAAP,GAAe,6BAAf;AACrC;AACD,UAAG,CAACG,MAAM,CAACF,QAAX,EAAqBO,MAAM,CAACP,QAAP,GAAkB,gBAAlB;AACrB,aAAOO,MAAP;AACD;AAjBsB,GAAD,CAAxB;AAoBA,sBACE;AAAK,IAAA,EAAE,EAAC,OAAR;AAAgB,IAAA,KAAK,EAAC,QAAtB;AAAA,2BAOE;AAAM,MAAA,QAAQ,EAAEV,MAAM,CAACY,YAAvB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,EAAE,EAAC,YAAV;AAAuB,QAAA,IAAI,EAAC,OAA5B;AAAoC,QAAA,IAAI,EAAC,MAAzC;AAAgD,QAAA,QAAQ,EAAEZ,MAAM,CAACa,YAAjE;AAA+E,QAAA,KAAK,EAAEb,MAAM,CAACK,MAAP,CAAcH;AAApG;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGF,MAAM,CAACU,MAAP,CAAcR,KAAd,gBAAsB;AAAK,QAAA,EAAE,EAAC,YAAR;AAAqB,QAAA,KAAK,EAAE;AAACY,UAAAA,KAAK,EAAC;AAAP,SAA5B;AAAA,kBAA4Cd,MAAM,CAACU,MAAP,CAAcR;AAA1D;AAAA;AAAA;AAAA;AAAA,cAAtB,GAA8F,IAHjG,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAO,QAAA,EAAE,EAAC,UAAV;AAAqB,QAAA,IAAI,EAAC,UAA1B;AAAqC,QAAA,IAAI,EAAC,MAA1C;AAAiD,QAAA,QAAQ,EAAEF,MAAM,CAACa,YAAlE;AAAgF,QAAA,KAAK,EAAEb,MAAM,CAACK,MAAP,CAAcF;AAArG;AAAA;AAAA;AAAA;AAAA,cALF,EAMGH,MAAM,CAACU,MAAP,CAAcP,QAAd,gBAAyB;AAAK,QAAA,EAAE,EAAC,UAAR;AAAmB,QAAA,KAAK,EAAE;AAACW,UAAAA,KAAK,EAAC;AAAP,SAA1B;AAAA,kBAA0Cd,MAAM,CAACU,MAAP,CAAcP;AAAxD;AAAA;AAAA;AAAA;AAAA,cAAzB,GAAkG,IANrG,eAOE;AAAA,+BAAK;AAAQ,UAAA,EAAE,EAAC,WAAX;AAAuB,UAAA,IAAI,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GAzCQJ,G;UAEQD,S;;;KAFRC,G;AA2CT,eAAeA,GAAf","sourcesContent":["import React from \"react\";\n// TODO: import useFormik from formik library\nimport {useFormik} from 'formik'\n\nfunction App() {\n  // TODO: add a const called formik assigned to useFormik()\n  const formik = useFormik({\n    initialValues: {\n      email: '', \n      password: ''\n    },\n    onSubmit: values => {\n      console.log('form:', values);\n      alert(\"Login Suc\");\n    },\n    validate: values => {\n      let errors = {};\n      if(!values.email) errors.email = 'Field required';\n      else {\n        if(values.email.indexOf('@') == -1) errors.email = 'Username should be an email';\n      }\n      if(!values.password) errors.password = 'Field required';\n      return errors;\n    }\n  });\n\n  return (\n    <div id=\"space\" align=\"center\">\n      {\n        /* <p>\n          The app is ready! You can proceed with the task instructions. TODO:\n          build you form here.\n        </p> */\n      }\n      <form onSubmit={formik.handleSubmit}>\n        <div>Email</div>\n        <input id=\"emailField\" name=\"email\" type=\"text\" onChange={formik.handleChange} value={formik.values.email}/>\n        {formik.errors.email ? <div id='emailError' style={{color:'red'}}>{formik.errors.email}</div>: null}\n        <div>Password</div>\n        <input id=\"pswField\" name=\"password\" type=\"text\" onChange={formik.handleChange} value={formik.values.password}/>\n        {formik.errors.password ? <div id='pswError' style={{color:'red'}}>{formik.errors.password}</div>: null}\n        <div><button id=\"submitBtn\" type='submit'>Submit</button></div>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}